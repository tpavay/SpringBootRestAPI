spring.application.name=rest-demo

# Database configuration
spring.datasource.url=jdbc:mysql://localhost:3306/cloud_vendor
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate configuration

# All classes marked with @Entity will get mapped to a table within our connected database
# Using create as the ddl-auto option will drop and re-add tables on startup. So, any data within
# those tables will be lost. A better option for development is to use update. With update, new
# columns/tables are created if needed and any old data is preserved.
spring.jpa.hibernate.ddl-auto=update

# Show SQL statements that hibernate is trying to execute.
spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect